<?php
declare(strict_types=1);

namespace {{package}};

use ADS\OpenApi\Codegen\Endpoint\Endpoint;
use ADS\OpenApi\Codegen\Endpoint\EndpointLogic;
use ADS\OpenApi\Codegen\Endpoint\SpecialKeySupportLogic;
use EventEngine\Data\ImmutableRecord;
use EventEngine\Data\ImmutableRecordLogic;
use EventEngine\Data\SpecialKeySupport;
{{#operations}}
{{#operation}}
{{#queryParams.0}}
use {{invokerPackage}}\Model\{{operationIdCamelCase}}Query;
{{/queryParams.0}}
{{#bodyParams.0}}
use {{invokerPackage}}\Model\{{bodyParams.0.baseType}};
{{/bodyParams.0}}
{{#formParams.0}}
use {{invokerPackage}}\Model\{{formParams.0.baseType}};
{{/formParams.0}}
{{/operation}}
{{/operations}}

class {{classname}} implements Endpoint, SpecialKeySupport
{
{{#operations}}
{{#operation}}
    use EndpointLogic;
    use SpecialKeySupportLogic;

    private string $method = '{{httpMethod}}';
    private string $uri = '{{path}}';{{#pathParams}}
    /** @var {{dataType}}{{#isContainer}}<{{^items.complexType}}{{#items.isContainer}}mixed{{/items.isContainer}}{{^items.isContainer}}{{items.baseType}}{{/items.isContainer}}{{/items.complexType}}{{#items.complexType}}{{{.}}}{{/items.complexType}}>{{/isContainer}}{{#isNullable}}|null{{/isNullable}}{{^required}}{{^isNullable}}|null{{/isNullable}}{{/required}} */
    private ${{paramName}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}{{^defaultValue}}{{#isNullable}} = null{{/isNullable}}{{^required}}{{^isNullable}} = null{{/isNullable}}{{/required}}{{/defaultValue}};{{/pathParams}}{{#queryParams.0}}
    private {{operationIdCamelCase}}Query|null $query = null;{{/queryParams.0}}{{#bodyParams.0}}
    /** @var {{#bodyParams.0.isContainer}}{{bodyParams.0.dataType}}<{{bodyParams.0.baseType}}>{{/bodyParams.0.isContainer}}{{^bodyParams.0.isContainer}}{{bodyParams.0.baseType}}{{#bodyParams.0.isMap}}<mixed>{{/bodyParams.0.isMap}}{{/bodyParams.0.isContainer}}{{^bodyParams.0.required}}|null{{/bodyParams.0.required}} $body */
    private {{#bodyParams.0.isContainer}}{{bodyParams.0.dataType}}{{/bodyParams.0.isContainer}}{{^bodyParams.0.isContainer}}{{bodyParams.0.baseType}}{{/bodyParams.0.isContainer}}{{^bodyParams.0.required}}|null{{/bodyParams.0.required}} $body{{^bodyParams.0.required}} = null{{/bodyParams.0.required}};{{/bodyParams.0}}{{#formParams.0}}
    private {{formParams.0.baseType}}{{^formParams.0.required}}|null{{/formParams.0.required}} $form{{^formParams.0.required}} = null{{/formParams.0.required}};{{/formParams.0}}{{#pathParams}}

    /** @return {{dataType}}{{#isContainer}}<{{^items.complexType}}{{#items.isContainer}}mixed{{/items.isContainer}}{{^items.isContainer}}{{items.baseType}}{{/items.isContainer}}{{/items.complexType}}{{#items.complexType}}{{{.}}}{{/items.complexType}}>{{/isContainer}}{{#isNullable}}|null{{/isNullable}}{{^required}}{{^isNullable}}|null{{/isNullable}}{{/required}} */
    public function {{paramName}}()
    {
        return $this->{{paramName}};
    }{{/pathParams}}

    /** @return array<string,mixed> */
    public function toRequestParameters(): array
    {
        return [{{#pathParams}}
            '{{baseName}}' => $this->{{paramName}},{{/pathParams}}{{#queryParams.0}}
            'query' => $this->query,{{/queryParams.0}}{{#bodyParams.0}}
            'body' => $this->body,{{/bodyParams.0}}{{#formParams.0}}
            'form' => $this->form,{{/formParams.0}}
        ];
    }

    /** @return array<string,string> */
    public function keyMapping(): array
    {
        return [{{#pathParams}}
            '{{baseName}}' => '{{paramName}}',{{/pathParams}}
        ];
    }

    /** @return array<string, string> */
    private static function arrayPropItemTypeMap(): array
    {
        return [{{#bodyParams.0.isContainer}}
            'body' => {{#bodyParams.0.items.complexType}}{{{.}}}::class{{/bodyParams.0.items.complexType}},{{/bodyParams.0.isContainer}}
        ];
    }
{{/operation}}
{{/operations}}
}
